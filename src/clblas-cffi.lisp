;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.2
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


;;;SWIG wrapper code starts here

(in-package :cl-clblas)

(cl:defmacro defanonenum (cl:&body enums)
  "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                  for index = 0 then (cl:1+ index)
                  when (cl:listp value) do (cl:setf index (cl:second value)
                                                    value (cl:first value))
                    collect `(cl:defconstant ,value ,index))))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:fboundp 'swig-lispify)
    (cl:defun swig-lispify (name flag cl:&optional (package cl:*package*))
      (cl:labels ((helper (lst last rest cl:&aux (c (cl:car lst)))
                    (cl:cond
                      ((cl:null lst)
                       rest)
                      ((cl:upper-case-p c)
                       (helper (cl:cdr lst) 'upper
                               (cl:case last
                                 ((lower digit) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:lower-case-p c)
                       (helper (cl:cdr lst) 'lower (cl:cons (cl:char-upcase c) rest)))
                      ((cl:digit-char-p c)
                       (helper (cl:cdr lst) 'digit 
                               (cl:case last
                                 ((upper lower) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:char-equal c #\_)
                       (helper (cl:cdr lst) '_ (cl:cons #\- rest)))
                      (cl:t
                       (cl:error "Invalid character: ~A" c)))))
        (cl:let ((fix (cl:case flag
                        ((constant enumvalue) "+")
                        (variable "*")
                        (cl:t ""))))
          (cl:intern
           (cl:concatenate
            'cl:string
            fix
            (cl:nreverse (helper (cl:concatenate 'cl:list name) cl:nil cl:nil))
            fix)
           package))))))

;;;SWIG wrapper code ends here


(cffi:defcenum #.(swig-lispify "clblasOrder" 'enumname)
  #.(swig-lispify "clblasRowMajor" 'enumvalue :keyword)
  #.(swig-lispify "clblasColumnMajor" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "clblasOrder" 'enumname))

(cffi:defcenum #.(swig-lispify "clblasTranspose" 'enumname)
  #.(swig-lispify "clblasNoTrans" 'enumvalue :keyword)
  #.(swig-lispify "clblasTrans" 'enumvalue :keyword)
  #.(swig-lispify "clblasConjTrans" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "clblasTranspose" 'enumname))

(cffi:defcenum #.(swig-lispify "clblasUplo" 'enumname)
  #.(swig-lispify "clblasUpper" 'enumvalue :keyword)
  #.(swig-lispify "clblasLower" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "clblasUplo" 'enumname))

(cffi:defcenum #.(swig-lispify "clblasDiag" 'enumname)
  #.(swig-lispify "clblasUnit" 'enumvalue :keyword)
  #.(swig-lispify "clblasNonUnit" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "clblasDiag" 'enumname))

(cffi:defcenum #.(swig-lispify "clblasSide" 'enumname)
  #.(swig-lispify "clblasLeft" 'enumvalue :keyword)
  #.(swig-lispify "clblasRight" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "clblasSide" 'enumname))

(cffi:defcenum #.(swig-lispify "clblasStatus" 'enumname)
  (#.(swig-lispify "clblasSuccess" 'enumvalue :keyword) #.0)
  (#.(swig-lispify "clblasInvalidValue" 'enumvalue :keyword) #.-30)
  (#.(swig-lispify "clblasInvalidCommandQueue" 'enumvalue :keyword) #.-36)
  (#.(swig-lispify "clblasInvalidContext" 'enumvalue :keyword) #.-34)
  (#.(swig-lispify "clblasInvalidMemObject" 'enumvalue :keyword) #.-38)
  (#.(swig-lispify "clblasInvalidDevice" 'enumvalue :keyword) #.-33)
  (#.(swig-lispify "clblasInvalidEventWaitList" 'enumvalue :keyword) #.-57)
  (#.(swig-lispify "clblasOutOfResources" 'enumvalue :keyword) #.-5)
  (#.(swig-lispify "clblasOutOfHostMemory" 'enumvalue :keyword) #.-6)
  (#.(swig-lispify "clblasInvalidOperation" 'enumvalue :keyword) #.-59)
  (#.(swig-lispify "clblasCompilerNotAvailable" 'enumvalue :keyword) #.-3)
  (#.(swig-lispify "clblasBuildProgramFailure" 'enumvalue :keyword) #.-11)
  (#.(swig-lispify "clblasNotImplemented" 'enumvalue :keyword) #.-1024)
  #.(swig-lispify "clblasNotInitialized" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidMatA" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidMatB" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidMatC" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidVecX" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidVecY" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidDim" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidLeadDimA" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidLeadDimB" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidLeadDimC" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidIncX" 'enumvalue :keyword)
  #.(swig-lispify "clblasInvalidIncY" 'enumvalue :keyword)
  #.(swig-lispify "clblasInsufficientMemMatA" 'enumvalue :keyword)
  #.(swig-lispify "clblasInsufficientMemMatB" 'enumvalue :keyword)
  #.(swig-lispify "clblasInsufficientMemMatC" 'enumvalue :keyword)
  #.(swig-lispify "clblasInsufficientMemVecX" 'enumvalue :keyword)
  #.(swig-lispify "clblasInsufficientMemVecY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "clblasStatus" 'enumname))

(cffi:defcfun ("clblasGetVersion" #.(swig-lispify "clblasGetVersion" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (major :pointer)
  (minor :pointer)
  (patch :pointer))

(cl:export '#.(swig-lispify "clblasGetVersion" 'function))

(cffi:defcfun ("clblasSetup" #.(swig-lispify "clblasSetup" 'function)) #.(swig-lispify "clblasStatus" 'enumname))

(cl:export '#.(swig-lispify "clblasSetup" 'function))

(cffi:defcfun ("clblasTeardown" #.(swig-lispify "clblasTeardown" 'function)) :void)

(cl:export '#.(swig-lispify "clblasTeardown" 'function))

(cffi:defcfun ("clblasSswap" #.(swig-lispify "clblasSswap" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSswap" 'function))

(cffi:defcfun ("clblasDswap" #.(swig-lispify "clblasDswap" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDswap" 'function))

(cffi:defcfun ("clblasCswap" #.(swig-lispify "clblasCswap" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCswap" 'function))

(cffi:defcfun ("clblasZswap" #.(swig-lispify "clblasZswap" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZswap" 'function))

(cffi:defcfun ("clblasSscal" #.(swig-lispify "clblasSscal" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSscal" 'function))

(cffi:defcfun ("clblasDscal" #.(swig-lispify "clblasDscal" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDscal" 'function))

(cffi:defcfun ("clblasCscal" #.(swig-lispify "clblasCscal" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCscal" 'function))

(cffi:defcfun ("clblasZscal" #.(swig-lispify "clblasZscal" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZscal" 'function))

(cffi:defcfun ("clblasCsscal" #.(swig-lispify "clblasCsscal" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCsscal" 'function))

(cffi:defcfun ("clblasZdscal" #.(swig-lispify "clblasZdscal" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZdscal" 'function))

(cffi:defcfun ("clblasScopy" #.(swig-lispify "clblasScopy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasScopy" 'function))

(cffi:defcfun ("clblasDcopy" #.(swig-lispify "clblasDcopy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDcopy" 'function))

(cffi:defcfun ("clblasCcopy" #.(swig-lispify "clblasCcopy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCcopy" 'function))

(cffi:defcfun ("clblasZcopy" #.(swig-lispify "clblasZcopy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZcopy" 'function))

(cffi:defcfun ("clblasSaxpy" #.(swig-lispify "clblasSaxpy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSaxpy" 'function))

(cffi:defcfun ("clblasDaxpy" #.(swig-lispify "clblasDaxpy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDaxpy" 'function))

(cffi:defcfun ("clblasCaxpy" #.(swig-lispify "clblasCaxpy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCaxpy" 'function))

(cffi:defcfun ("clblasZaxpy" #.(swig-lispify "clblasZaxpy" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZaxpy" 'function))

(cffi:defcfun ("clblasSdot" #.(swig-lispify "clblasSdot" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (dotProduct :pointer)
  (offDP :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSdot" 'function))

(cffi:defcfun ("clblasDdot" #.(swig-lispify "clblasDdot" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (dotProduct :pointer)
  (offDP :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDdot" 'function))

(cffi:defcfun ("clblasCdotu" #.(swig-lispify "clblasCdotu" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (dotProduct :pointer)
  (offDP :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCdotu" 'function))

(cffi:defcfun ("clblasZdotu" #.(swig-lispify "clblasZdotu" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (dotProduct :pointer)
  (offDP :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZdotu" 'function))

(cffi:defcfun ("clblasCdotc" #.(swig-lispify "clblasCdotc" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (dotProduct :pointer)
  (offDP :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCdotc" 'function))

(cffi:defcfun ("clblasZdotc" #.(swig-lispify "clblasZdotc" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (dotProduct :pointer)
  (offDP :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZdotc" 'function))

(cffi:defcfun ("clblasSrotg" #.(swig-lispify "clblasSrotg" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (SA :pointer)
  (offSA :unsigned-long)
  (SB :pointer)
  (offSB :unsigned-long)
  (C :pointer)
  (offC :unsigned-long)
  (S :pointer)
  (offS :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSrotg" 'function))

(cffi:defcfun ("clblasDrotg" #.(swig-lispify "clblasDrotg" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (DA :pointer)
  (offDA :unsigned-long)
  (DB :pointer)
  (offDB :unsigned-long)
  (C :pointer)
  (offC :unsigned-long)
  (S :pointer)
  (offS :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDrotg" 'function))

(cffi:defcfun ("clblasCrotg" #.(swig-lispify "clblasCrotg" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (CA :pointer)
  (offCA :unsigned-long)
  (CB :pointer)
  (offCB :unsigned-long)
  (C :pointer)
  (offC :unsigned-long)
  (S :pointer)
  (offS :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCrotg" 'function))

(cffi:defcfun ("clblasZrotg" #.(swig-lispify "clblasZrotg" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (CA :pointer)
  (offCA :unsigned-long)
  (CB :pointer)
  (offCB :unsigned-long)
  (C :pointer)
  (offC :unsigned-long)
  (S :pointer)
  (offS :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZrotg" 'function))

(cffi:defcfun ("clblasSrotmg" #.(swig-lispify "clblasSrotmg" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (SD1 :pointer)
  (offSD1 :unsigned-long)
  (SD2 :pointer)
  (offSD2 :unsigned-long)
  (SX1 :pointer)
  (offSX1 :unsigned-long)
  (SY1 :pointer)
  (offSY1 :unsigned-long)
  (SPARAM :pointer)
  (offSparam :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSrotmg" 'function))

(cffi:defcfun ("clblasDrotmg" #.(swig-lispify "clblasDrotmg" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (DD1 :pointer)
  (offDD1 :unsigned-long)
  (DD2 :pointer)
  (offDD2 :unsigned-long)
  (DX1 :pointer)
  (offDX1 :unsigned-long)
  (DY1 :pointer)
  (offDY1 :unsigned-long)
  (DPARAM :pointer)
  (offDparam :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDrotmg" 'function))

(cffi:defcfun ("clblasSrot" #.(swig-lispify "clblasSrot" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (C :float)
  (S :float)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSrot" 'function))

(cffi:defcfun ("clblasDrot" #.(swig-lispify "clblasDrot" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (C :double)
  (S :double)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDrot" 'function))

(cffi:defcfun ("clblasCsrot" #.(swig-lispify "clblasCsrot" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (C :float)
  (S :float)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCsrot" 'function))

(cffi:defcfun ("clblasZdrot" #.(swig-lispify "clblasZdrot" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (C :double)
  (S :double)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZdrot" 'function))

(cffi:defcfun ("clblasSrotm" #.(swig-lispify "clblasSrotm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (SPARAM :pointer)
  (offSparam :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSrotm" 'function))

(cffi:defcfun ("clblasDrotm" #.(swig-lispify "clblasDrotm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (DPARAM :pointer)
  (offDparam :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDrotm" 'function))

(cffi:defcfun ("clblasSnrm2" #.(swig-lispify "clblasSnrm2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (NRM2 :pointer)
  (offNRM2 :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSnrm2" 'function))

(cffi:defcfun ("clblasDnrm2" #.(swig-lispify "clblasDnrm2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (NRM2 :pointer)
  (offNRM2 :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDnrm2" 'function))

(cffi:defcfun ("clblasScnrm2" #.(swig-lispify "clblasScnrm2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (NRM2 :pointer)
  (offNRM2 :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasScnrm2" 'function))

(cffi:defcfun ("clblasDznrm2" #.(swig-lispify "clblasDznrm2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (NRM2 :pointer)
  (offNRM2 :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDznrm2" 'function))

(cffi:defcfun ("clblasiSamax" #.(swig-lispify "clblasiSamax" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (iMax :pointer)
  (offiMax :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasiSamax" 'function))

(cffi:defcfun ("clblasiDamax" #.(swig-lispify "clblasiDamax" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (iMax :pointer)
  (offiMax :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasiDamax" 'function))

(cffi:defcfun ("clblasiCamax" #.(swig-lispify "clblasiCamax" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (iMax :pointer)
  (offiMax :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasiCamax" 'function))

(cffi:defcfun ("clblasiZamax" #.(swig-lispify "clblasiZamax" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (iMax :pointer)
  (offiMax :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasiZamax" 'function))

(cffi:defcfun ("clblasSasum" #.(swig-lispify "clblasSasum" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (asum :pointer)
  (offAsum :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSasum" 'function))

(cffi:defcfun ("clblasDasum" #.(swig-lispify "clblasDasum" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (asum :pointer)
  (offAsum :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDasum" 'function))

(cffi:defcfun ("clblasScasum" #.(swig-lispify "clblasScasum" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (asum :pointer)
  (offAsum :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasScasum" 'function))

(cffi:defcfun ("clblasDzasum" #.(swig-lispify "clblasDzasum" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (N :unsigned-long)
  (asum :pointer)
  (offAsum :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDzasum" 'function))

(cffi:defcfun ("clblasSgemv" #.(swig-lispify "clblasSgemv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (x :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :float)
  (y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSgemv" 'function))

(cffi:defcfun ("clblasDgemv" #.(swig-lispify "clblasDgemv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (x :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :double)
  (y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDgemv" 'function))

(cffi:defcfun ("clblasCgemv" #.(swig-lispify "clblasCgemv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (x :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCgemv" 'function))

(cffi:defcfun ("clblasZgemv" #.(swig-lispify "clblasZgemv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (x :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZgemv" 'function))

(cffi:defcfun ("clblasSsymv" #.(swig-lispify "clblasSsymv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (x :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :float)
  (y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsymv" 'function))

(cffi:defcfun ("clblasDsymv" #.(swig-lispify "clblasDsymv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (x :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :double)
  (y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsymv" 'function))

(cffi:defcfun ("clblasChemv" #.(swig-lispify "clblasChemv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasChemv" 'function))

(cffi:defcfun ("clblasZhemv" #.(swig-lispify "clblasZhemv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZhemv" 'function))

(cffi:defcfun ("clblasStrmv" #.(swig-lispify "clblasStrmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStrmv" 'function))

(cffi:defcfun ("clblasDtrmv" #.(swig-lispify "clblasDtrmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtrmv" 'function))

(cffi:defcfun ("clblasCtrmv" #.(swig-lispify "clblasCtrmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtrmv" 'function))

(cffi:defcfun ("clblasZtrmv" #.(swig-lispify "clblasZtrmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtrmv" 'function))

(cffi:defcfun ("clblasStrsv" #.(swig-lispify "clblasStrsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStrsv" 'function))

(cffi:defcfun ("clblasDtrsv" #.(swig-lispify "clblasDtrsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtrsv" 'function))

(cffi:defcfun ("clblasCtrsv" #.(swig-lispify "clblasCtrsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtrsv" 'function))

(cffi:defcfun ("clblasZtrsv" #.(swig-lispify "clblasZtrsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtrsv" 'function))

(cffi:defcfun ("clblasSger" #.(swig-lispify "clblasSger" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSger" 'function))

(cffi:defcfun ("clblasDger" #.(swig-lispify "clblasDger" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDger" 'function))

(cffi:defcfun ("clblasCgeru" #.(swig-lispify "clblasCgeru" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCgeru" 'function))

(cffi:defcfun ("clblasZgeru" #.(swig-lispify "clblasZgeru" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZgeru" 'function))

(cffi:defcfun ("clblasCgerc" #.(swig-lispify "clblasCgerc" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCgerc" 'function))

(cffi:defcfun ("clblasZgerc" #.(swig-lispify "clblasZgerc" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZgerc" 'function))

(cffi:defcfun ("clblasSsyr" #.(swig-lispify "clblasSsyr" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsyr" 'function))

(cffi:defcfun ("clblasDsyr" #.(swig-lispify "clblasDsyr" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsyr" 'function))

(cffi:defcfun ("clblasCher" #.(swig-lispify "clblasCher" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCher" 'function))

(cffi:defcfun ("clblasZher" #.(swig-lispify "clblasZher" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZher" 'function))

(cffi:defcfun ("clblasSsyr2" #.(swig-lispify "clblasSsyr2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsyr2" 'function))

(cffi:defcfun ("clblasDsyr2" #.(swig-lispify "clblasDsyr2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsyr2" 'function))

(cffi:defcfun ("clblasCher2" #.(swig-lispify "clblasCher2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCher2" 'function))

(cffi:defcfun ("clblasZher2" #.(swig-lispify "clblasZher2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZher2" 'function))

(cffi:defcfun ("clblasStpmv" #.(swig-lispify "clblasStpmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStpmv" 'function))

(cffi:defcfun ("clblasDtpmv" #.(swig-lispify "clblasDtpmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtpmv" 'function))

(cffi:defcfun ("clblasCtpmv" #.(swig-lispify "clblasCtpmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtpmv" 'function))

(cffi:defcfun ("clblasZtpmv" #.(swig-lispify "clblasZtpmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtpmv" 'function))

(cffi:defcfun ("clblasStpsv" #.(swig-lispify "clblasStpsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStpsv" 'function))

(cffi:defcfun ("clblasDtpsv" #.(swig-lispify "clblasDtpsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtpsv" 'function))

(cffi:defcfun ("clblasCtpsv" #.(swig-lispify "clblasCtpsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtpsv" 'function))

(cffi:defcfun ("clblasZtpsv" #.(swig-lispify "clblasZtpsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtpsv" 'function))

(cffi:defcfun ("clblasSspmv" #.(swig-lispify "clblasSspmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :float)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSspmv" 'function))

(cffi:defcfun ("clblasDspmv" #.(swig-lispify "clblasDspmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :double)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDspmv" 'function))

(cffi:defcfun ("clblasChpmv" #.(swig-lispify "clblasChpmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasChpmv" 'function))

(cffi:defcfun ("clblasZhpmv" #.(swig-lispify "clblasZhpmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (AP :pointer)
  (offa :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZhpmv" 'function))

(cffi:defcfun ("clblasSspr" #.(swig-lispify "clblasSspr" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSspr" 'function))

(cffi:defcfun ("clblasDspr" #.(swig-lispify "clblasDspr" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDspr" 'function))

(cffi:defcfun ("clblasChpr" #.(swig-lispify "clblasChpr" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasChpr" 'function))

(cffi:defcfun ("clblasZhpr" #.(swig-lispify "clblasZhpr" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZhpr" 'function))

(cffi:defcfun ("clblasSspr2" #.(swig-lispify "clblasSspr2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :float)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSspr2" 'function))

(cffi:defcfun ("clblasDspr2" #.(swig-lispify "clblasDspr2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :double)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDspr2" 'function))

(cffi:defcfun ("clblasChpr2" #.(swig-lispify "clblasChpr2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasChpr2" 'function))

(cffi:defcfun ("clblasZhpr2" #.(swig-lispify "clblasZhpr2" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (alpha :pointer)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (AP :pointer)
  (offa :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZhpr2" 'function))

(cffi:defcfun ("clblasSgbmv" #.(swig-lispify "clblasSgbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (KL :unsigned-long)
  (KU :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :float)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSgbmv" 'function))

(cffi:defcfun ("clblasDgbmv" #.(swig-lispify "clblasDgbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (KL :unsigned-long)
  (KU :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :double)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDgbmv" 'function))

(cffi:defcfun ("clblasCgbmv" #.(swig-lispify "clblasCgbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (KL :unsigned-long)
  (KU :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCgbmv" 'function))

(cffi:defcfun ("clblasZgbmv" #.(swig-lispify "clblasZgbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (KL :unsigned-long)
  (KU :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZgbmv" 'function))

(cffi:defcfun ("clblasStbmv" #.(swig-lispify "clblasStbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStbmv" 'function))

(cffi:defcfun ("clblasDtbmv" #.(swig-lispify "clblasDtbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtbmv" 'function))

(cffi:defcfun ("clblasCtbmv" #.(swig-lispify "clblasCtbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtbmv" 'function))

(cffi:defcfun ("clblasZtbmv" #.(swig-lispify "clblasZtbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (scratchBuff :pointer)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtbmv" 'function))

(cffi:defcfun ("clblasSsbmv" #.(swig-lispify "clblasSsbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :float)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsbmv" 'function))

(cffi:defcfun ("clblasDsbmv" #.(swig-lispify "clblasDsbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :double)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsbmv" 'function))

(cffi:defcfun ("clblasChbmv" #.(swig-lispify "clblasChbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasChbmv" 'function))

(cffi:defcfun ("clblasZhbmv" #.(swig-lispify "clblasZhbmv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (beta :pointer)
  (Y :pointer)
  (offy :unsigned-long)
  (incy :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZhbmv" 'function))

(cffi:defcfun ("clblasStbsv" #.(swig-lispify "clblasStbsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStbsv" 'function))

(cffi:defcfun ("clblasDtbsv" #.(swig-lispify "clblasDtbsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtbsv" 'function))

(cffi:defcfun ("clblasCtbsv" #.(swig-lispify "clblasCtbsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtbsv" 'function))

(cffi:defcfun ("clblasZtbsv" #.(swig-lispify "clblasZtbsv" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (X :pointer)
  (offx :unsigned-long)
  (incx :int)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtbsv" 'function))

(cffi:defcfun ("clblasSgemm" #.(swig-lispify "clblasSgemm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (transB #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :float)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSgemm" 'function))

(cffi:defcfun ("clblasDgemm" #.(swig-lispify "clblasDgemm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (transB #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :double)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDgemm" 'function))

(cffi:defcfun ("clblasCgemm" #.(swig-lispify "clblasCgemm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (transB #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCgemm" 'function))

(cffi:defcfun ("clblasZgemm" #.(swig-lispify "clblasZgemm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (transB #.(swig-lispify "clblasTranspose" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZgemm" 'function))

(cffi:defcfun ("clblasStrmm" #.(swig-lispify "clblasStrmm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStrmm" 'function))

(cffi:defcfun ("clblasDtrmm" #.(swig-lispify "clblasDtrmm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtrmm" 'function))

(cffi:defcfun ("clblasCtrmm" #.(swig-lispify "clblasCtrmm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtrmm" 'function))

(cffi:defcfun ("clblasZtrmm" #.(swig-lispify "clblasZtrmm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtrmm" 'function))

(cffi:defcfun ("clblasStrsm" #.(swig-lispify "clblasStrsm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasStrsm" 'function))

(cffi:defcfun ("clblasDtrsm" #.(swig-lispify "clblasDtrsm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDtrsm" 'function))

(cffi:defcfun ("clblasCtrsm" #.(swig-lispify "clblasCtrsm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCtrsm" 'function))

(cffi:defcfun ("clblasZtrsm" #.(swig-lispify "clblasZtrsm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (diag #.(swig-lispify "clblasDiag" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZtrsm" 'function))

(cffi:defcfun ("clblasSsyrk" #.(swig-lispify "clblasSsyrk" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (beta :float)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsyrk" 'function))

(cffi:defcfun ("clblasDsyrk" #.(swig-lispify "clblasDsyrk" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (beta :double)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsyrk" 'function))

(cffi:defcfun ("clblasCsyrk" #.(swig-lispify "clblasCsyrk" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCsyrk" 'function))

(cffi:defcfun ("clblasZsyrk" #.(swig-lispify "clblasZsyrk" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZsyrk" 'function))

(cffi:defcfun ("clblasSsyr2k" #.(swig-lispify "clblasSsyr2k" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transAB #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :float)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsyr2k" 'function))

(cffi:defcfun ("clblasDsyr2k" #.(swig-lispify "clblasDsyr2k" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transAB #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :double)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsyr2k" 'function))

(cffi:defcfun ("clblasCsyr2k" #.(swig-lispify "clblasCsyr2k" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transAB #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCsyr2k" 'function))

(cffi:defcfun ("clblasZsyr2k" #.(swig-lispify "clblasZsyr2k" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transAB #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offA :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offC :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZsyr2k" 'function))

(cffi:defcfun ("clblasSsymm" #.(swig-lispify "clblasSsymm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :float)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasSsymm" 'function))

(cffi:defcfun ("clblasDsymm" #.(swig-lispify "clblasDsymm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :double)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasDsymm" 'function))

(cffi:defcfun ("clblasCsymm" #.(swig-lispify "clblasCsymm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCsymm" 'function))

(cffi:defcfun ("clblasZsymm" #.(swig-lispify "clblasZsymm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZsymm" 'function))

(cffi:defcfun ("clblasChemm" #.(swig-lispify "clblasChemm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasChemm" 'function))

(cffi:defcfun ("clblasZhemm" #.(swig-lispify "clblasZhemm" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (side #.(swig-lispify "clblasSide" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (M :unsigned-long)
  (N :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :pointer)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZhemm" 'function))

(cffi:defcfun ("clblasCherk" #.(swig-lispify "clblasCherk" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :float)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (beta :float)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCherk" 'function))

(cffi:defcfun ("clblasZherk" #.(swig-lispify "clblasZherk" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (transA #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :double)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (beta :double)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZherk" 'function))

(cffi:defcfun ("clblasCher2k" #.(swig-lispify "clblasCher2k" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :float)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCher2k" 'function))

(cffi:defcfun ("clblasZher2k" #.(swig-lispify "clblasZher2k" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (uplo #.(swig-lispify "clblasUplo" 'enumname))
  (trans #.(swig-lispify "clblasTranspose" 'enumname))
  (N :unsigned-long)
  (K :unsigned-long)
  (alpha :pointer)
  (A :pointer)
  (offa :unsigned-long)
  (lda :unsigned-long)
  (B :pointer)
  (offb :unsigned-long)
  (ldb :unsigned-long)
  (beta :double)
  (C :pointer)
  (offc :unsigned-long)
  (ldc :unsigned-long)
  (numCommandQueues :unsigned-int)
  (commandQueues :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasZher2k" 'function))

(cffi:defcfun ("clblasMatrixSizeInfo" #.(swig-lispify "clblasMatrixSizeInfo" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (rows :unsigned-long)
  (columns :unsigned-long)
  (elemsize :unsigned-long)
  (padding :unsigned-long)
  (ld :pointer)
  (fullsize :pointer))

(cl:export '#.(swig-lispify "clblasMatrixSizeInfo" 'function))

(cffi:defcfun ("clblasCreateMatrix" #.(swig-lispify "clblasCreateMatrix" 'function)) :pointer
  (context :pointer)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (rows :unsigned-long)
  (columns :unsigned-long)
  (elemsize :unsigned-long)
  (padding :unsigned-long)
  (ld :pointer)
  (fullsize :pointer)
  (err :pointer))

(cl:export '#.(swig-lispify "clblasCreateMatrix" 'function))

(cffi:defcfun ("clblasCreateMatrixWithLd" #.(swig-lispify "clblasCreateMatrixWithLd" 'function)) :pointer
  (context :pointer)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (rows :unsigned-long)
  (columns :unsigned-long)
  (elemsize :unsigned-long)
  (ld :unsigned-long)
  (fullsize :pointer)
  (err :pointer))

(cl:export '#.(swig-lispify "clblasCreateMatrixWithLd" 'function))

(cffi:defcfun ("clblasCreateMatrixFromHost" #.(swig-lispify "clblasCreateMatrixFromHost" 'function)) :pointer
  (context :pointer)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (rows :unsigned-long)
  (columns :unsigned-long)
  (elemsize :unsigned-long)
  (ld :unsigned-long)
  (host :pointer)
  (off_host :unsigned-long)
  (ld_host :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (err :pointer))

(cl:export '#.(swig-lispify "clblasCreateMatrixFromHost" 'function))

(cffi:defcfun ("clblasWriteSubMatrix" #.(swig-lispify "clblasWriteSubMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (nrB :unsigned-long)
  (ncB :unsigned-long)
  (xB :unsigned-long)
  (yB :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasWriteSubMatrix" 'function))

(cffi:defcfun ("clblasWriteSubMatrixAsync" #.(swig-lispify "clblasWriteSubMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (nrB :unsigned-long)
  (ncB :unsigned-long)
  (xB :unsigned-long)
  (yB :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (event :pointer))

(cl:export '#.(swig-lispify "clblasWriteSubMatrixAsync" 'function))

(cffi:defcfun ("clblasReadSubMatrix" #.(swig-lispify "clblasReadSubMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (nrB :unsigned-long)
  (ncB :unsigned-long)
  (xB :unsigned-long)
  (yB :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasReadSubMatrix" 'function))

(cffi:defcfun ("clblasReadSubMatrixAsync" #.(swig-lispify "clblasReadSubMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (nrB :unsigned-long)
  (ncB :unsigned-long)
  (xB :unsigned-long)
  (yB :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (event :pointer))

(cl:export '#.(swig-lispify "clblasReadSubMatrixAsync" 'function))

(cffi:defcfun ("clblasCopySubMatrix" #.(swig-lispify "clblasCopySubMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (nrB :unsigned-long)
  (ncB :unsigned-long)
  (xB :unsigned-long)
  (yB :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasCopySubMatrix" 'function))

(cffi:defcfun ("clblasCopySubMatrixAsync" #.(swig-lispify "clblasCopySubMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (nrB :unsigned-long)
  (ncB :unsigned-long)
  (xB :unsigned-long)
  (yB :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (event :pointer))

(cl:export '#.(swig-lispify "clblasCopySubMatrixAsync" 'function))

(cffi:defcfun ("clblasWriteVector" #.(swig-lispify "clblasWriteVector" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasWriteVector" 'function))

(cffi:defcfun ("clblasWriteVectorAsync" #.(swig-lispify "clblasWriteVectorAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasWriteVectorAsync" 'function))

(cffi:defcfun ("clblasReadVector" #.(swig-lispify "clblasReadVector" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasReadVector" 'function))

(cffi:defcfun ("clblasReadVectorAsync" #.(swig-lispify "clblasReadVectorAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasReadVectorAsync" 'function))

(cffi:defcfun ("clblasCopyVector" #.(swig-lispify "clblasCopyVector" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasCopyVector" 'function))

(cffi:defcfun ("clblasCopyVectorAsync" #.(swig-lispify "clblasCopyVectorAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCopyVectorAsync" 'function))

(cffi:defcfun ("clblasWriteMatrix" #.(swig-lispify "clblasWriteMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (sx :unsigned-long)
  (sy :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasWriteMatrix" 'function))

(cffi:defcfun ("clblasWriteMatrixAsync" #.(swig-lispify "clblasWriteMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (sx :unsigned-long)
  (sy :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasWriteMatrixAsync" 'function))

(cffi:defcfun ("clblasReadMatrix" #.(swig-lispify "clblasReadMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (sx :unsigned-long)
  (sy :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasReadMatrix" 'function))

(cffi:defcfun ("clblasReadMatrixAsync" #.(swig-lispify "clblasReadMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (sx :unsigned-long)
  (sy :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasReadMatrixAsync" 'function))

(cffi:defcfun ("clblasCopyMatrix" #.(swig-lispify "clblasCopyMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (sx :unsigned-long)
  (sy :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasCopyMatrix" 'function))

(cffi:defcfun ("clblasCopyMatrixAsync" #.(swig-lispify "clblasCopyMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (sx :unsigned-long)
  (sy :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (B :pointer)
  (offB :unsigned-long)
  (ldB :unsigned-long)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (events :pointer))

(cl:export '#.(swig-lispify "clblasCopyMatrixAsync" 'function))

(cffi:defcfun ("clblasFillVector" #.(swig-lispify "clblasFillVector" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (host :pointer)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasFillVector" 'function))

(cffi:defcfun ("clblasFillVectorAsync" #.(swig-lispify "clblasFillVectorAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (nb_elem :unsigned-long)
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (pattern :pointer)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (event :pointer))

(cl:export '#.(swig-lispify "clblasFillVectorAsync" 'function))

(cffi:defcfun ("clblasFillMatrix" #.(swig-lispify "clblasFillMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (pattern :pointer)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasFillMatrix" 'function))

(cffi:defcfun ("clblasFillSubMatrix" #.(swig-lispify "clblasFillSubMatrix" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (nrA :unsigned-long)
  (ncA :unsigned-long)
  (xA :unsigned-long)
  (yA :unsigned-long)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (pattern :pointer)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer))

(cl:export '#.(swig-lispify "clblasFillSubMatrix" 'function))

(cffi:defcfun ("clblasFillSubMatrixAsync" #.(swig-lispify "clblasFillSubMatrixAsync" 'function)) #.(swig-lispify "clblasStatus" 'enumname)
  (order #.(swig-lispify "clblasOrder" 'enumname))
  (element_size :unsigned-long)
  (A :pointer)
  (offA :unsigned-long)
  (ldA :unsigned-long)
  (sxA :unsigned-long)
  (syA :unsigned-long)
  (xA :int)
  (yA :int)
  (nx :unsigned-long)
  (ny :unsigned-long)
  (host :pointer)
  (command_queue :pointer)
  (numEventsInWaitList :unsigned-int)
  (eventWaitList :pointer)
  (event :pointer))

(cl:export '#.(swig-lispify "clblasFillSubMatrixAsync" 'function))


